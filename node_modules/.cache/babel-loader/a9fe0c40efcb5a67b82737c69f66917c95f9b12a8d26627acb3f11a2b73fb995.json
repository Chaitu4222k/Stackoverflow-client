{"ast":null,"code":"import axios from 'axios';\n\n// const API = axios.create({baseURL: 'https://stackoverflow-g6az.onrender.com'});\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem(\"Profile\")) {\n    req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem(\"Profile\")).token}`;\n  }\n  return req;\n});\n\n// =================================== Login signup functions ==============================================================\nexport const logIn = authData => API.post('/user/login', authData);\nexport const signUp = authData => API.post('/user/signup', authData);\n\n// =================================== Question functions ===========================================================================\nexport const postQuestion = questionData => API.post('/questions/Ask', questionData);\nexport const getAllQuestions = () => API.get('/questions/get');\nexport const deleteQuestion = id => API.delete(`/questions/delete/${id}`);\nexport const questionsAsked = id => API.get(`/questions/asked/${id}`);\n\n// ===========================================Vote Functions============================================================================\nexport const voteQuestion = (id, value, userId) => API.patch(`/questions/vote/${id}`, {\n  value,\n  userId\n});\n\n// =================================== Answer functions =======================================================================================================\nexport const postAnswer = (id, noOfAnswers, answerBody, userAnswered, userId) => API.patch(`/answer/post/${id}`, {\n  noOfAnswers,\n  answerBody,\n  userAnswered,\n  userId\n});\nexport const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, {\n  answerId,\n  noOfAnswers\n});\n\n// =========================================== Users page =====================================================================================================\nexport const fetchAllUsers = () => API.get('/user/getAllUsers');\nexport const updateProfile = (id, updateData) => API.patch(`/user/update/${id}`, updateData);\n\n// ================================================= Add/Remove Friends ======================================================================\nexport const addFriend = (id, userId) => API.patch('/user/friend', {\n  id,\n  userId\n});\nexport const removeFriend = (id, userId) => API.patch('/user/unfriend', {\n  id,\n  userId\n});\n\n// ========================================================= Posts =================================================================================\nexport const getPosts = () => API.get('/post/get');\nexport const getUserPosts = id => API.get(`/post/user-posts/${id}`);\nexport const addPost = data => API.post('/post/add', data);\nexport const likePost = (id, userId) => API.patch(`/post/like/${id}`, {\n  userId\n});\nexport const dislikePost = (id, userId) => API.patch(`/post/dislike/${id}`, {\n  userId\n});\n\n// ============================================================ Subscription =======================================================================\nexport const order = amount => API.post('/subscription/order', {\n  amount\n});\nexport const verifyOrder = (id, amount, response) => API.post('/subscription/is-order-complete', {\n  id,\n  amount,\n  response\n});\nexport const checkSubs = userId => API.get(`/subscription/check-subscription/${userId}`);\n\n//============================================================== Chatbot =============================================================================\nexport const postChat = (userId, promptValue) => API.post(\"/chat/add\", {\n  userId,\n  message: promptValue\n});\nexport const getChat = id => API.get(`/chat/get/${id}`);\nexport const addComment = (postId, userId, content, name) => API.patch(`/post/add-comment/${postId}`, {\n  postId,\n  userId,\n  content,\n  name\n});\nexport const deleteComment = (postId, commentId) => API.delete(`/post/delete-comment/${postId}`, {\n  data: {\n    postId,\n    commentId\n  }\n});","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","logIn","authData","post","signUp","postQuestion","questionData","getAllQuestions","get","deleteQuestion","id","delete","questionsAsked","voteQuestion","value","userId","patch","postAnswer","noOfAnswers","answerBody","userAnswered","deleteAnswer","answerId","fetchAllUsers","updateProfile","updateData","addFriend","removeFriend","getPosts","getUserPosts","addPost","data","likePost","dislikePost","order","amount","verifyOrder","response","checkSubs","postChat","promptValue","message","getChat","addComment","postId","content","name","deleteComment","commentId"],"sources":["/home/chaitu/StackOverflow-clone/StackOverflow-clone/client/src/api/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n// const API = axios.create({baseURL: 'https://stackoverflow-g6az.onrender.com'});\r\n const API = axios.create({baseURL: 'http://localhost:5000'});\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    if(localStorage.getItem(\"Profile\")){\r\n        req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem(\"Profile\")).token}`;\r\n    }\r\n    return req;\r\n});\r\n\r\n// =================================== Login signup functions ==============================================================\r\nexport const logIn = (authData) => API.post('/user/login', authData);\r\nexport const signUp = (authData) => API.post('/user/signup', authData);\r\n\r\n\r\n// =================================== Question functions ===========================================================================\r\nexport const postQuestion = (questionData) => API.post('/questions/Ask',questionData);\r\nexport const getAllQuestions = () => API.get('/questions/get');\r\nexport const deleteQuestion = (id) => API.delete(`/questions/delete/${id}`);\r\nexport const questionsAsked = (id) => API.get(`/questions/asked/${id}`);\r\n\r\n// ===========================================Vote Functions============================================================================\r\nexport const voteQuestion = (id, value, userId)=> API.patch(`/questions/vote/${id}`,{ value, userId });\r\n\r\n// =================================== Answer functions =======================================================================================================\r\nexport const postAnswer = (id, noOfAnswers, answerBody, userAnswered,userId) => API.patch(`/answer/post/${id}`,{noOfAnswers, answerBody, userAnswered,userId});\r\nexport const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`,{answerId,noOfAnswers});\r\n\r\n// =========================================== Users page =====================================================================================================\r\nexport const fetchAllUsers = () => API.get('/user/getAllUsers');\r\nexport const updateProfile = (id, updateData) => API.patch(`/user/update/${id}`, updateData);\r\n\r\n// ================================================= Add/Remove Friends ======================================================================\r\nexport const addFriend = (id, userId) => API.patch('/user/friend', { id, userId });\r\nexport const removeFriend = (id, userId) => API.patch('/user/unfriend', { id, userId });\r\n\r\n// ========================================================= Posts =================================================================================\r\nexport const getPosts = () => API.get('/post/get');\r\nexport const getUserPosts = (id) => API.get(`/post/user-posts/${id}`);\r\nexport const addPost = (data) => API.post('/post/add', data );\r\nexport const likePost = (id, userId) => API.patch(`/post/like/${id}`, { userId });\r\nexport const dislikePost = (id, userId) => API.patch(`/post/dislike/${id}`, { userId });\r\n\r\n// ============================================================ Subscription =======================================================================\r\nexport const order = (amount) => API.post('/subscription/order', { amount });\r\nexport const verifyOrder = (id, amount, response) => API.post('/subscription/is-order-complete', { id, amount, response });\r\nexport const checkSubs = (userId) => API.get(`/subscription/check-subscription/${userId}`);\r\n\r\n//============================================================== Chatbot =============================================================================\r\nexport const postChat = ( userId, promptValue ) => API.post(\"/chat/add\", { userId, message: promptValue });\r\nexport const getChat = ( id ) => API.get(`/chat/get/${id}`);\r\n\r\n\r\nexport const addComment = (postId, userId, content, name) =>\r\n  API.patch(`/post/add-comment/${postId}`, { postId, userId, content,name });\r\n\r\n  export const deleteComment = (postId, commentId) =>\r\n  API.delete(`/post/delete-comment/${postId}`, { data: { postId, commentId } });\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}